{"version":3,"sources":["scroll-depth-tracker.js","/source/scroll-depth-tracker.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","DEV_ID","2","action","beacon","category","debug","delay","labelNoScroll","labelScroll","sampleRate","scrollThreshold","setPage","timeout","timeThreshold","metric","3","constants","utilities","window","gaDevIds","push","pluginName","pluginConstructor","gaAlias","arguments","gaplugins","capitalize","./constants","./utilities","4","Utilities","toArray","arr","Array","prototype","slice","ready","fn","document","readyState","addEventListener","attachEvent","str","charAt","toUpperCase","extend","_extend","consumer","provider","key","hasOwnProperty","objects","newObject","event","element","context","pasteeater","handler","data","_context","_handler","detachEvent","removeEventListener","5","scrollDepthTracker","tracker","_config","self","this","config","defaults","hasScrolled","everScrolled","set","reach","initialReach","startTime","Date","percent","depth","pageHeight","location","pathname","onUnload","sampleScroll","onScroll","setTimeout","provide","console","log","pageYOffset","body","scrollTop","documentElement","innerHeight","clientHeight","height","Math","floor","temp","toFixed","max","scrollHeight","offsetHeight","interaction","skip","eventCategory","eventAction","eventLabel","eventValue","nonInteraction","hitCallback","send","navigator","sendBeacon","start","run","./defaults","./provide"],"mappings":"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","file":"scroll-depth-tracker.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  DEV_ID: 'SERPYSERPS'\n};\n},{}],2:[function(require,module,exports){\n/**\n * Default Configuration\n */\nmodule.exports = {\n  action : 'Pageview End',\n  beacon : true,\n  category : 'Page',\n  debug : false,\n  delay : true,\n  labelNoScroll : 'Did Not Scroll',\n  labelScroll : 'Did Scroll',\n  sampleRate : 100,\n  scrollThreshold : 10,\n  setPage : true,\n  timeout : 300,\n  timeThreshold : 15,\n  metric : null\n}\n},{}],3:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":1,\"./utilities\":4}],4:[function(require,module,exports){\n/**\n * Utilities\n */\nvar Utilities = {\n\n  /**\n   * convert to Array\n   * @return {Array} \n   */\n  toArray : function toArray(arr){\n    return Array.prototype.slice.call(arr)\n  },\n\n  /**\n   * DOMready handler\n   * @param  {function} fn handler\n   * @return {null}      \n   */\n  ready : function ready(fn){\n    if (document.readyState != 'loading')\n    {\n      fn()\n    } else if (document.addEventListener){\n      document.addEventListener('DOMContentLoaded', fn)\n    } else {\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState != 'loading') fn()\n      })\n    }\n  },\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n  /**\n   * Object Extend Utility\n   * @return {Object} combined object\n   */\n  extend : function extend()\n  {\n    var objects = Utilities.toArray(arguments)\n    var newObject = {}\n    var key\n    var i\n\n    function _extend(consumer, provider)\n    {\n      var key\n      for(key in provider)\n      {\n        if(!consumer.hasOwnProperty(key)){\n          consumer[key] = provider[key]\n        }\n      }\n      return consumer\n    }\n\n    for(i in objects)\n    {\n      objects[i] = _extend(newObject, objects[i])\n    }\n\n    return newObject\n  },\n\n\n  /**\n   * event handler utility\n   * @param  {element} element DOM element to attach event listener\n   * @param  {object} context The context the handler will be run in - can be overriden\n   * @return {function}         Specify event\n   */\n  event : function event(element, context){\n\n    // Assume modern browser\n    var pasteeater = false\n\n    // Check to see whether we're dealing with an old browser\n    // and change pasteeater to true if old browser detected\n    if(!element.addEventListener && element.attachEvent){\n      pasteeater = true\n    }\n\n    /**\n     * specify event\n     * @param  {string} event The event name\n     * @return {function}       Add handler\n     */\n    return function(event){\n\n      /**\n       * attach handler\n       * @param  {function} handler event handler\n       * @param  {object} data    Any extra data to pass to the handler\n       * @param  {object} _context Override the context the handler is run in\n       * @return {function}         Function to remove event listener\n       */\n      return function(handler, data, _context){\n        \n        context = _context || context\n\n        if(!handler.call){\n          throw Error('Callback is not a function')\n        }\n\n        // create new handler function based on arguments passed\n        var _handler = function(){\n          handler.call(context || element, event, data)\n        }\n\n        // fallback for old browsers\n        if(pasteeater){\n          element.attachEvent(\"on\"+event, _handler)\n        } else {\n          element.addEventListener(event, _handler, false)\n        }\n\n        /**\n         * remove handler\n         * @return {function} Call this function to remove event listener\n         */\n        return function(){\n          // fallback for old browsers\n          if(pasteeater){\n            element.detachEvent(event, _handler)\n          } else {\n            element.removeEventListener(event, _handler, false)\n          }\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Utilities\n},{}],5:[function(require,module,exports){\n/**\n * ScrollTracker\n */\n\nvar utilities = require('./utilities')\n\nvar defaults = require('./defaults')\n\nvar provide = require('./provide')\n\nfunction scrollDepthTracker(tracker, _config){\n\n  var self = this\n\n  this.tracker = tracker\n\n  /**\n   * configuration object\n   * @type {object}\n   */\n  this.config = utilities.extend(_config, defaults)\n\n  this.debug(this.config)\n\n\n\n  /**\n   * @type {Boolean}\n   */\n  this.hasScrolled = false\n\n  /**\n   * @type {Boolean}\n   */\n  this.everScrolled = false\n\n  /**\n   * set useBeacon to beacon config.beacon\n   */\n  this.tracker.set('useBeacon', this.config.beacon)\n\n\n  /**\n   * maximum scroll reach recorded\n   * @type {Number}\n   */\n  this.reach = 0\n\n  /**\n   * scroll reach on page load (usually window height)\n   * @type {Number}\n   */\n  this.initialReach = 0\n\n  /**\n   * used to store the timestamp of DOMready/plugin initalization\n   */\n  this.startTime = new Date()*1\n\n\n  /**\n   * Initalize plugin on DOMready\n   */\n  utilities.ready(function(){\n\n    // set inital reach to the scroll depth as soon as DOMReady occurs\n    self.initialReach = self.percent(self.depth(), self.pageHeight())\n\n    if(self.config.setPage){\n      self.tracker.set('page', window.location.pathname)\n    }\n\n    utilities.event(window, self)('beforeunload')(self.onUnload)\n\n    utilities.event(window)('scroll')(function(){\n      self.everScrolled = true\n      self.hasScrolled = true\n    })\n\n    var sampleScroll = function(){\n      if(self.hasScrolled){\n        self.hasScrolled = false\n        self.onScroll()\n      }\n      setTimeout(sampleScroll, self.config.sampleRate)\n    }\n    setTimeout(sampleScroll, self.config.sampleRate)\n\n  })\n\n\n}\n\n/**\n * debug utility - only outputs to console if debug method is true\n * @param  {string} msg debug message\n */\nscrollDepthTracker.prototype.debug = function(){\n  if(this.config.debug){\n    console.log(utilities.toArray(arguments))\n  }\n}\n\n/**\n * calculate scroll depth to the bottom on the viewport\n * @return {int} current scroll depth in pixels\n */\nscrollDepthTracker.prototype.depth = function(){\n  return (window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop || 0) +\n    (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight)\n}\n\n/**\n * return percentage depth from depth and page height\n * @param  {integer} depth  scroll depth in pixels\n * @param  {integer} height page height in pixels\n * @return {integer}        percent depth\n */\nscrollDepthTracker.prototype.percent = function(depth, height){\n  return Math.floor(100 * depth / height)\n}\n\n/**\n * sampled scroll callback\n * @return {null} \n */\nscrollDepthTracker.prototype.onScroll = function(){\n  var self = this\n\n  var temp = this.percent(this.depth(), this.pageHeight())\n\n  if(temp > this.reach){\n    if(temp > 100){\n      this.reach = 100\n    } else {\n      this.reach = temp\n    }\n  }\n\n  if(this.config.metric && this.config.metric.toFixed){\n    this.tracker.set('metric'+this.config.metric, this.reach)\n  }\n\n  this.debug('on scroll: reach', this.reach)\n}\n\n\n/**\n * calculate height of document\n * @return {int} height in pixels\n */\nscrollDepthTracker.prototype.pageHeight = function()\n{\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  )\n}\n\n/**\n * window beforeunload callback\n * @return {null} \n */\nscrollDepthTracker.prototype.onUnload = function(){\n\n  var self = this\n\n  var interaction = false\n\n  var skip = false\n\n  console.log(this.config.timeThreshold * 1000)\n  console.log(new Date()*1 - this.startTime)\n  console.log(this.reach)\n  console.log(this.initialReach)\n  console.log(this.config.scrollThreshold)\n\n\n  if(( new Date()*1 - this.startTime > this.config.timeThreshold * 1000) || (this.reach > this.initialReach + this.config.scrollThreshold)){\n    interaction = true\n  }\n\n  console.log((interaction) ? \"interactive\" : \"not interactive\")\n\n  var data = {\n    eventCategory: this.config.category,\n    eventAction: this.config.action,\n    eventLabel: (this.everScrolled) ? this.config.labelScroll : this.config.labelNoScroll,\n    eventValue: this.reach,\n    nonInteraction: !interaction,\n    hitCallback: function(){\n      skip = true\n      self.debug('hit sent!')\n    }\n  }\n\n  this.debug(data)\n\n  // send event to GA\n  this.tracker.send('event', data)\n\n  if (this.config.timeout && !window.navigator.sendBeacon){\n    var start = new Date()\n    var run = 0\n    do {\n      run = new Date() - start\n\n    } while (run < this.config.timeout && !skip)\n\n    this.debug('close page')\n  }\n\n}\n\n\n\n\nprovide('scrollDepthTracker', scrollDepthTracker)\n},{\"./defaults\":2,\"./provide\":3,\"./utilities\":4}]},{},[5]);\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  DEV_ID: 'SERPYSERPS'\n};\n},{}],2:[function(require,module,exports){\n/**\n * Default Configuration\n */\nmodule.exports = {\n  action : 'Pageview End',\n  beacon : true,\n  category : 'Page',\n  debug : false,\n  delay : true,\n  labelNoScroll : 'Did Not Scroll',\n  labelScroll : 'Did Scroll',\n  sampleRate : 100,\n  scrollThreshold : 10,\n  setPage : true,\n  timeout : 300,\n  timeThreshold : 15,\n  metric : null\n}\n},{}],3:[function(require,module,exports){\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar constants = require('./constants');\nvar utilities = require('./utilities');\n\n\n// Adds the dev ID to the list of dev IDs if any plugin is used.\n(window.gaDevIds = window.gaDevIds || []).push(constants.DEV_ID);\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nmodule.exports = function providePlugin(pluginName, pluginConstructor) {\n  var gaAlias = window['GoogleAnalyticsObject'] || 'ga';\n  window[gaAlias] = window[gaAlias] || function() {\n    (window[gaAlias]['q'] = window[gaAlias]['q'] || []).push(arguments);\n  };\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[utilities.capitalize(pluginName)] = pluginConstructor;\n};\n\n},{\"./constants\":1,\"./utilities\":4}],4:[function(require,module,exports){\n/**\n * Utilities\n */\nvar Utilities = {\n\n  /**\n   * convert to Array\n   * @return {Array} \n   */\n  toArray : function toArray(arr){\n    return Array.prototype.slice.call(arr)\n  },\n\n  /**\n   * DOMready handler\n   * @param  {function} fn handler\n   * @return {null}      \n   */\n  ready : function ready(fn){\n    if (document.readyState != 'loading')\n    {\n      fn()\n    } else if (document.addEventListener){\n      document.addEventListener('DOMContentLoaded', fn)\n    } else {\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState != 'loading') fn()\n      })\n    }\n  },\n\n  /**\n   * Capitalizes the first letter of a string.\n   * @param {string} str The input string.\n   * @return {string} The capitalized string\n   */\n  capitalize: function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n  /**\n   * Object Extend Utility\n   * @return {Object} combined object\n   */\n  extend : function extend()\n  {\n    var objects = Utilities.toArray(arguments)\n    var newObject = {}\n    var key\n    var i\n\n    function _extend(consumer, provider)\n    {\n      var key\n      for(key in provider)\n      {\n        if(!consumer.hasOwnProperty(key)){\n          consumer[key] = provider[key]\n        }\n      }\n      return consumer\n    }\n\n    for(i in objects)\n    {\n      objects[i] = _extend(newObject, objects[i])\n    }\n\n    return newObject\n  },\n\n\n  /**\n   * event handler utility\n   * @param  {element} element DOM element to attach event listener\n   * @param  {object} context The context the handler will be run in - can be overriden\n   * @return {function}         Specify event\n   */\n  event : function event(element, context){\n\n    // Assume modern browser\n    var pasteeater = false\n\n    // Check to see whether we're dealing with an old browser\n    // and change pasteeater to true if old browser detected\n    if(!element.addEventListener && element.attachEvent){\n      pasteeater = true\n    }\n\n    /**\n     * specify event\n     * @param  {string} event The event name\n     * @return {function}       Add handler\n     */\n    return function(event){\n\n      /**\n       * attach handler\n       * @param  {function} handler event handler\n       * @param  {object} data    Any extra data to pass to the handler\n       * @param  {object} _context Override the context the handler is run in\n       * @return {function}         Function to remove event listener\n       */\n      return function(handler, data, _context){\n        \n        context = _context || context\n\n        if(!handler.call){\n          throw Error('Callback is not a function')\n        }\n\n        // create new handler function based on arguments passed\n        var _handler = function(){\n          handler.call(context || element, event, data)\n        }\n\n        // fallback for old browsers\n        if(pasteeater){\n          element.attachEvent(\"on\"+event, _handler)\n        } else {\n          element.addEventListener(event, _handler, false)\n        }\n\n        /**\n         * remove handler\n         * @return {function} Call this function to remove event listener\n         */\n        return function(){\n          // fallback for old browsers\n          if(pasteeater){\n            element.detachEvent(event, _handler)\n          } else {\n            element.removeEventListener(event, _handler, false)\n          }\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Utilities\n},{}],5:[function(require,module,exports){\n/**\n * ScrollTracker\n */\n\nvar utilities = require('./utilities')\n\nvar defaults = require('./defaults')\n\nvar provide = require('./provide')\n\nfunction scrollDepthTracker(tracker, _config){\n\n  var self = this\n\n  this.tracker = tracker\n\n  /**\n   * configuration object\n   * @type {object}\n   */\n  this.config = utilities.extend(_config, defaults)\n\n  this.debug(this.config)\n\n\n\n  /**\n   * @type {Boolean}\n   */\n  this.hasScrolled = false\n\n  /**\n   * @type {Boolean}\n   */\n  this.everScrolled = false\n\n  /**\n   * set useBeacon to beacon config.beacon\n   */\n  this.tracker.set('useBeacon', this.config.beacon)\n\n\n  /**\n   * maximum scroll reach recorded\n   * @type {Number}\n   */\n  this.reach = 0\n\n  /**\n   * scroll reach on page load (usually window height)\n   * @type {Number}\n   */\n  this.initialReach = 0\n\n  /**\n   * used to store the timestamp of DOMready/plugin initalization\n   */\n  this.startTime = new Date()*1\n\n\n  /**\n   * Initalize plugin on DOMready\n   */\n  utilities.ready(function(){\n\n    // set inital reach to the scroll depth as soon as DOMReady occurs\n    self.initialReach = self.percent(self.depth(), self.pageHeight())\n\n    if(self.config.setPage){\n      self.tracker.set('page', window.location.pathname)\n    }\n\n    utilities.event(window, self)('beforeunload')(self.onUnload)\n\n    utilities.event(window)('scroll')(function(){\n      self.everScrolled = true\n      self.hasScrolled = true\n    })\n\n    var sampleScroll = function(){\n      if(self.hasScrolled){\n        self.hasScrolled = false\n        self.onScroll()\n      }\n      setTimeout(sampleScroll, self.config.sampleRate)\n    }\n    setTimeout(sampleScroll, self.config.sampleRate)\n\n  })\n\n\n}\n\n/**\n * debug utility - only outputs to console if debug method is true\n * @param  {string} msg debug message\n */\nscrollDepthTracker.prototype.debug = function(){\n  if(this.config.debug){\n    console.log(utilities.toArray(arguments))\n  }\n}\n\n/**\n * calculate scroll depth to the bottom on the viewport\n * @return {int} current scroll depth in pixels\n */\nscrollDepthTracker.prototype.depth = function(){\n  return (window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop || 0) +\n    (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight)\n}\n\n/**\n * return percentage depth from depth and page height\n * @param  {integer} depth  scroll depth in pixels\n * @param  {integer} height page height in pixels\n * @return {integer}        percent depth\n */\nscrollDepthTracker.prototype.percent = function(depth, height){\n  return Math.floor(100 * depth / height)\n}\n\n/**\n * sampled scroll callback\n * @return {null} \n */\nscrollDepthTracker.prototype.onScroll = function(){\n  var self = this\n\n  var temp = this.percent(this.depth(), this.pageHeight())\n\n  if(temp > this.reach){\n    if(temp > 100){\n      this.reach = 100\n    } else {\n      this.reach = temp\n    }\n  }\n\n  if(this.config.metric && this.config.metric.toFixed){\n    this.tracker.set('metric'+this.config.metric, this.reach)\n  }\n\n  this.debug('on scroll: reach', this.reach)\n}\n\n\n/**\n * calculate height of document\n * @return {int} height in pixels\n */\nscrollDepthTracker.prototype.pageHeight = function()\n{\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  )\n}\n\n/**\n * window beforeunload callback\n * @return {null} \n */\nscrollDepthTracker.prototype.onUnload = function(){\n\n  var self = this\n\n  var interaction = false\n\n  var skip = false\n\n  console.log(this.config.timeThreshold * 1000)\n  console.log(new Date()*1 - this.startTime)\n  console.log(this.reach)\n  console.log(this.initialReach)\n  console.log(this.config.scrollThreshold)\n\n\n  if(( new Date()*1 - this.startTime > this.config.timeThreshold * 1000) || (this.reach > this.initialReach + this.config.scrollThreshold)){\n    interaction = true\n  }\n\n  console.log((interaction) ? \"interactive\" : \"not interactive\")\n\n  var data = {\n    eventCategory: this.config.category,\n    eventAction: this.config.action,\n    eventLabel: (this.everScrolled) ? this.config.labelScroll : this.config.labelNoScroll,\n    eventValue: this.reach,\n    nonInteraction: !interaction,\n    hitCallback: function(){\n      skip = true\n      self.debug('hit sent!')\n    }\n  }\n\n  this.debug(data)\n\n  // send event to GA\n  this.tracker.send('event', data)\n\n  if (this.config.timeout && !window.navigator.sendBeacon){\n    var start = new Date()\n    var run = 0\n    do {\n      run = new Date() - start\n\n    } while (run < this.config.timeout && !skip)\n\n    this.debug('close page')\n  }\n\n}\n\n\n\n\nprovide('scrollDepthTracker', scrollDepthTracker)\n},{\"./defaults\":2,\"./provide\":3,\"./utilities\":4}]},{},[5]);\n"],"sourceRoot":"/source/"}